{"version":3,"sources":["enums/RoutePath.ts","components/background/Background.tsx","components/primary-layout/PrimaryLayout.tsx","components/button/Button.tsx","pages/home/Home.tsx","pages/game/Game.tsx","pages/score/Score.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RoutePath","Background","className","PrimaryLayout","children","Button","name","onButtonClick","onClick","Home","console","log","Game","Score","App","basename","process","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAAYA,E,0DAAAA,K,SAAAA,E,aAAAA,E,gBAAAA,M,wCCkBGC,EAhBI,WACjB,OACE,sBAAKC,UAAU,yBAAf,UACE,qBAAKA,UAAU,4BAAf,SACE,qBAAKA,UAAU,qBAEjB,qBAAKA,UAAU,+BAAf,SACE,qBAAKA,UAAU,wBAEjB,qBAAKA,UAAU,+BAAf,SACE,qBAAKA,UAAU,4BCCRC,EATiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjC,OACE,sBAAKF,UAAU,SAAf,UACGE,EACD,cAAC,EAAD,QCSSC,G,MATwB,SAAC,GAG/B,IAFPC,EAEM,EAFNA,KACAC,EACM,EADNA,cAEA,OACE,wBAAQC,QAASD,EAAjB,SAAiCD,MCItBG,EAbF,WACX,OACE,cAAC,EAAD,UACE,qBAAKP,UAAU,OAAf,SACE,cAAC,EAAD,CACEI,KAAK,aACLC,cAAe,kBAAMG,QAAQC,IAAI,gBCO5BC,G,MAbF,WACX,OACE,cAAC,EAAD,UACE,qBAAKV,UAAU,OAAf,SACE,cAAC,EAAD,CACEI,KAAK,aACLC,cAAe,kBAAMG,QAAQC,IAAI,iBCO5BE,G,MAbD,WACZ,OACE,cAAC,EAAD,UACE,qBAAKX,UAAU,QAAf,SACE,cAAC,EAAD,CACEI,KAAK,QACLC,cAAe,kBAAMG,QAAQC,IAAI,kBCU5BG,MAZf,WACE,OACE,cAAC,IAAD,CAAYC,SAAUC,mBAAtB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAMjB,EAAUS,KAAMS,OAAK,EAACC,UAAWV,IAC9C,cAAC,IAAD,CAAOQ,KAAMjB,EAAUY,KAAMO,UAAWP,IACxC,cAAC,IAAD,CAAOK,KAAMjB,EAAUa,MAAOM,UAAWN,UCAlCO,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFZQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAS5Bb,M","file":"static/js/main.fbf46746.chunk.js","sourcesContent":["export enum RoutePath {\n  Home = '/',\n  Game = '/game',\n  Score = '/score',\n}\n","import './Background.scss';\n\nconst Background = () => {\n  return (\n    <div className=\"wave-wrapper animation\">\n      <div className=\"wave-wrapper--inner bgTop\">\n        <div className=\"wave wave--top\" />\n      </div>\n      <div className=\"wave-wrapper--inner bgMiddle\">\n        <div className=\"wave wave--middle\" />\n      </div>\n      <div className=\"wave-wrapper--inner bgBottom\">\n        <div className=\"wave wave--bottom\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Background;\n\n","import React from 'react';\nimport './PrimaryLayout.scss';\nimport Background from '../background/Background';\n\nconst PrimaryLayout: React.FC = ({ children }) => {\n  return (\n    <div className=\"Layout\">\n      {children}\n      <Background />\n    </div>\n  );\n};\n\nexport default PrimaryLayout;\n","import React from 'react';\nimport './Button.scss';\n\ninterface IButtonProps {\n  name: string;\n  onButtonClick: () => void;\n}\n\nconst Button: React.FC<IButtonProps> = ({\n  name,\n  onButtonClick,\n  }) => {\n  return (\n    <button onClick={onButtonClick}>{name}</button>\n  );\n};\n\nexport default Button;\n\n","import './Home.scss';\nimport PrimaryLayout from '../../components/primary-layout/PrimaryLayout';\nimport Button from '../../components/button/Button';\n\nconst Home = () => {\n  return (\n    <PrimaryLayout>\n      <div className=\"Home\">\n        <Button\n          name=\"Start game\"\n          onButtonClick={() => console.log('HOME')}\n        />\n      </div>\n    </PrimaryLayout>\n  );\n};\n\nexport default Home;\n\n","import './Game.scss';\nimport Button from '../../components/button/Button';\nimport PrimaryLayout from '../../components/primary-layout/PrimaryLayout';\n\nconst Game = () => {\n  return (\n    <PrimaryLayout>\n      <div className=\"Game\">\n        <Button\n          name=\"Flip cards\"\n          onButtonClick={() => console.log('FLIP')}\n        />\n      </div>\n    </PrimaryLayout>\n  );\n};\n\nexport default Game;\n","import './Score.scss';\nimport PrimaryLayout from '../../components/primary-layout/PrimaryLayout';\nimport Button from '../../components/button/Button';\n\nconst Score = () => {\n  return (\n    <PrimaryLayout>\n      <div className=\"Score\">\n        <Button\n          name=\"Score\"\n          onButtonClick={() => console.log('SCORE')}\n        />\n      </div>\n    </PrimaryLayout>\n  );\n};\n\nexport default Score;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { RoutePath } from './enums/RoutePath';\nimport './styles/App.scss';\nimport Home from './pages/home/Home';\nimport Game from './pages/game/Game';\nimport Score from './pages/score/Score';\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path={RoutePath.Home} exact component={Home} />\n        <Route path={RoutePath.Game} component={Game} />\n        <Route path={RoutePath.Score} component={Score} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/index.scss';\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n  );\n};\n\nrenderApp();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}